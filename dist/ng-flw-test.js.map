{"version":3,"file":"ng-flw-test.js","sources":["ts/ng-flw-test.ts","ts/src/app/modules/flutterwave.module.ts","ts/src/app/modules/flutterwave.service.ts","ts/src/app/modules/make-payment/make-payment.component.ts","ts/src/app/modules/models.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {FlutterwaveModule,Flutterwave,InlinePaymentOptions,PaymentSuccessResponse,AsyncPaymentOptions,MakePaymentComponent} from './public_api';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MakePaymentComponent } from './make-payment/make-payment.component';\nimport {Flutterwave} from './flutterwave.service';\nexport class FlutterwaveModule {\nconstructor() {\n\n      const inlineSdk = 'https://checkout.flutterwave.com/v3.js';\n      const script = document.createElement('script');\n      script.src = inlineSdk;\n      if (!document.querySelector(`[src=\"${inlineSdk}\"]`)) {\n        document.body.appendChild(script)\n      }\n\n\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [MakePaymentComponent] ,\n  providers: [Flutterwave],\n  exports: [MakePaymentComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction FlutterwaveModule_tsickle_Closure_declarations() {\n/** @type {?} */\nFlutterwaveModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlutterwaveModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport {AsyncPaymentOptions, FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from './models';\nexport class Flutterwave {\nconstructor() { }\n/**\n * @param {?} paymentData\n * @return {?}\n */\ninlinePay(paymentData: InlinePaymentOptions) {\n\n    const /** @type {?} */ data = {\n      ...paymentData,\n      callback: response => {\n        paymentData.callbackContext[paymentData.callback.name](response)\n      } ,\n      onclose: () => {\n        try {\n          paymentData.callbackContext[paymentData.onclose.name]()\n        } catch ( /** @type {?} */e) {}\n      }\n    };\n\n    FlutterwaveCheckout(data);\n\n  }\n/**\n * @param {?} paymentData\n * @return {?}\n */\nasyncInlinePay(paymentData: AsyncPaymentOptions): Promise<PaymentSuccessResponse | 'closed'> {\n\n    return new Promise((resolve, reject) => {\n\n      paymentData = {\n        ...paymentData,\n        callback: ($event) => {\n          resolve($event)\n        } ,\n        onclose: () => resolve('closed')\n      };\n\n      FlutterwaveCheckout(paymentData)\n\n    })\n\n  }\n/**\n *\n * @param {?=} waitDuration {Number} Seconds before closing payment modal\n * @return {?}\n */\nclosePaymentModal(waitDuration: number = 0) {\n\n    setTimeout(() => {\n      document.getElementsByName('checkout')[0].setAttribute('style', 'z-index: -1; opacity: 0')\n\n    } , waitDuration * 1000 )\n\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Flutterwave_tsickle_Closure_declarations() {\n/** @type {?} */\nFlutterwave.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFlutterwave.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FlutterwaveCheckout, InlinePaymentOptions, PaymentSuccessResponse} from '../models';\nexport class MakePaymentComponent implements OnInit {\n\n   public_key: string;\n   tx_ref: string;\n   amount: number;\n   currency: string;\n   payment_options: string;\n   redirect_url: string;\n   meta: object; // { counsumer_id, consumer_mac}\n   customer: object; // {email, phone_number,name}\n   callback: EventEmitter<PaymentSuccessResponse> = new EventEmitter<PaymentSuccessResponse>();\n   close: EventEmitter<any> = new EventEmitter();\n   customizations: object; // {title, description, logo}\n   text: string;\n   style: any;\n   className: string;\n   data: InlinePaymentOptions;\nprivate inlinePaymentOptions: InlinePaymentOptions;\n\n  customer_defaults = {\n    email: '',\n    phone_number: '',\n    name: '',\n  };\n  meta_defaults = {\n    consumer_id: '',\n    consumer_mac: '',\n  };\n  customizations_defaults = {\n    title: '',\n    description: '',\n    logo: '',\n  };\nconstructor() {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n  }\n/**\n * @return {?}\n */\nmakePayment() {\n\n    this.prepareForPayment();\n    FlutterwaveCheckout(this.inlinePaymentOptions);\n\n  }\n/**\n * @return {?}\n */\nprepareForPayment(): void {\n\n    this.customer = this.customer || {};\n    this.meta = this.meta || {};\n    this.customizations = this.customizations || {};\n\n    if ( this.data ) {\n      this.inlinePaymentOptions = {\n        ...this.data,\n        callback: response => {\n        this.data.callbackContext[this.data.callback.name](response)\n      } ,\n        onclose: () => {\n          try {\n            this.data.callbackContext[this.data.onclose.name]()\n          } catch ( /** @type {?} */e) {\n\n          }\n\n        } ,\n\n      }\n    } else {\n\n      this.inlinePaymentOptions = {\n        callbackContext: null,\n        public_key: this.public_key,\n        tx_ref: this.tx_ref,\n        amount: this.amount,\n        currency: this.currency || 'NGN',\n        payment_options: this.payment_options || 'card, mobilemoney, ussd',\n        redirect_url: this.redirect_url || '',\n        meta: {...this.meta_defaults, ...this.meta},\n        customer: {...this.customer_defaults, ...this.customer},\n        callback: (response: PaymentSuccessResponse) => {\n          this.callback.emit(response)\n        },\n        onclose: () => this.close.emit(),\n        customizations: {...this.customizations_defaults\n          , ...this.customizations}\n      }\n\n    }\n\n\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  // tslint:disable-next-line:component-selector\n  selector: 'flutterwave-make-payment',\n  template: `\n    <button\n      style=\"{{style}}\"\n      [ngClass]=\"className ? className : 'flutterwave-pay-button' \"\n      (click)=\"makePayment()\">\n      {{text || 'Pay'}}\n    </button>\n  `,\n  styles: [`\n    .flutterwave-pay-button{\n      background-color: #f5a623;\n      border-radius: 4px;\n      border-color: #f5a623;\n      -webkit-box-shadow: 0 2px 3px 0 #ccc;\n              box-shadow: 0 2px 3px 0 #ccc;\n      color: #fff;\n      display: block;\n      font-size: 12px;\n      font-weight: 700;\n      padding: 14px 22px;\n      text-align: center;\n      text-decoration: none;\n      -webkit-transition: all .3s ease-in-out;\n      transition: all .3s ease-in-out;\n\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'public_key': [{ type: Input },],\n'tx_ref': [{ type: Input },],\n'amount': [{ type: Input },],\n'currency': [{ type: Input },],\n'payment_options': [{ type: Input },],\n'redirect_url': [{ type: Input },],\n'meta': [{ type: Input },],\n'customer': [{ type: Input },],\n'callback': [{ type: Output },],\n'close': [{ type: Output },],\n'customizations': [{ type: Input },],\n'text': [{ type: Input },],\n'style': [{ type: Input },],\n'className': [{ type: Input },],\n'data': [{ type: Input },],\n};\n}\n\nfunction MakePaymentComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nMakePaymentComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMakePaymentComponent.ctorParameters;\n/** @type {?} */\nMakePaymentComponent.propDecorators;\n/** @type {?} */\nMakePaymentComponent.prototype.public_key;\n/** @type {?} */\nMakePaymentComponent.prototype.tx_ref;\n/** @type {?} */\nMakePaymentComponent.prototype.amount;\n/** @type {?} */\nMakePaymentComponent.prototype.currency;\n/** @type {?} */\nMakePaymentComponent.prototype.payment_options;\n/** @type {?} */\nMakePaymentComponent.prototype.redirect_url;\n/** @type {?} */\nMakePaymentComponent.prototype.meta;\n/** @type {?} */\nMakePaymentComponent.prototype.customer;\n/** @type {?} */\nMakePaymentComponent.prototype.callback;\n/** @type {?} */\nMakePaymentComponent.prototype.close;\n/** @type {?} */\nMakePaymentComponent.prototype.customizations;\n/** @type {?} */\nMakePaymentComponent.prototype.text;\n/** @type {?} */\nMakePaymentComponent.prototype.style;\n/** @type {?} */\nMakePaymentComponent.prototype.className;\n/** @type {?} */\nMakePaymentComponent.prototype.data;\n/** @type {?} */\nMakePaymentComponent.prototype.inlinePaymentOptions;\n/** @type {?} */\nMakePaymentComponent.prototype.customer_defaults;\n/** @type {?} */\nMakePaymentComponent.prototype.meta_defaults;\n/** @type {?} */\nMakePaymentComponent.prototype.customizations_defaults;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Payment data object\n * \\@property public_key {String}\n * \\@property callbackContext {Object}  The context of the\n * component or service that has the callback method.\n * The value must always be 'this'.\n * Using any other value might lead to error.\n * \\@property tx_ref {String}\n * \\@property amount {Number}\n * \\@property currency {String}\n * \\@property payment_options {String}\n * \\@property redirect_url {String}\n * \\@property meta {Object}\n * \\@property customer {Object}\n * \\@property customizations {Object}\n * \\@property callback {Function}\n * \\@property onclose {Function}\n */\nclass  InlinePaymentOptions  {\n  public_key: string;\n  callbackContext: object;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  country?: string;\n  authorization?: object | string;\n  payment_options?: string;\n  redirect_url?: string;\n  meta ?: any;\n  customer?: object;\n  customizations?: object;\n  callback: (response: object) => void;\n  onclose?: () => void;\n}\n\nfunction InlinePaymentOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nInlinePaymentOptions.prototype.public_key;\n/** @type {?} */\nInlinePaymentOptions.prototype.callbackContext;\n/** @type {?} */\nInlinePaymentOptions.prototype.tx_ref;\n/** @type {?} */\nInlinePaymentOptions.prototype.amount;\n/** @type {?} */\nInlinePaymentOptions.prototype.currency;\n/** @type {?} */\nInlinePaymentOptions.prototype.country;\n/** @type {?} */\nInlinePaymentOptions.prototype.authorization;\n/** @type {?} */\nInlinePaymentOptions.prototype.payment_options;\n/** @type {?} */\nInlinePaymentOptions.prototype.redirect_url;\n/** @type {?} */\nInlinePaymentOptions.prototype.meta;\n/** @type {?} */\nInlinePaymentOptions.prototype.customer;\n/** @type {?} */\nInlinePaymentOptions.prototype.customizations;\n/** @type {?} */\nInlinePaymentOptions.prototype.callback;\n/** @type {?} */\nInlinePaymentOptions.prototype.onclose;\n}\n\n/**\n * Async Payment data object\n * \\@property public_key {String}\n * \\@property tx_ref {String}\n * \\@property amount {Number}\n * \\@property currency {String}\n * \\@property payment_options {String}\n * \\@property meta {Object}\n * \\@property customer {Object}\n * \\@property customizations {Object}\n */\nclass  AsyncPaymentOptions {\n  public_key: string;\n  tx_ref: string;\n  amount: number;\n  currency?: string;\n  country?: string;\n  authorization?: object | string;\n  payment_options?: string;\n  meta ?: any;\n  customer?: object;\n  customizations?: object;\n}\n\nfunction AsyncPaymentOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nAsyncPaymentOptions.prototype.public_key;\n/** @type {?} */\nAsyncPaymentOptions.prototype.tx_ref;\n/** @type {?} */\nAsyncPaymentOptions.prototype.amount;\n/** @type {?} */\nAsyncPaymentOptions.prototype.currency;\n/** @type {?} */\nAsyncPaymentOptions.prototype.country;\n/** @type {?} */\nAsyncPaymentOptions.prototype.authorization;\n/** @type {?} */\nAsyncPaymentOptions.prototype.payment_options;\n/** @type {?} */\nAsyncPaymentOptions.prototype.meta;\n/** @type {?} */\nAsyncPaymentOptions.prototype.customer;\n/** @type {?} */\nAsyncPaymentOptions.prototype.customizations;\n}\n\n\n\ndeclare function  FlutterwaveCheckout(any)\n/**\n * Payment Response\n * \\@property amount {String}\n * \\@property currency {Number}\n * \\@property customer {Object}\n * \\@property flw_ref {String}\n * \\@property status {String}\n * \\@property transaction_id {String}\n * \\@property tx_ref {String}\n */\nclass  PaymentSuccessResponse {\n    amount?: number;\n    currency?: string;\n    customer?: object;\n    flw_ref?: string;\n    status?: string;\n    transaction_id?: number;\n    tx_ref?: string\n  }\n\nfunction PaymentSuccessResponse_tsickle_Closure_declarations() {\n/** @type {?} */\nPaymentSuccessResponse.prototype.amount;\n/** @type {?} */\nPaymentSuccessResponse.prototype.currency;\n/** @type {?} */\nPaymentSuccessResponse.prototype.customer;\n/** @type {?} */\nPaymentSuccessResponse.prototype.flw_ref;\n/** @type {?} */\nPaymentSuccessResponse.prototype.status;\n/** @type {?} */\nPaymentSuccessResponse.prototype.transaction_id;\n/** @type {?} */\nPaymentSuccessResponse.prototype.tx_ref;\n}\n\n\n\n  export {\n    InlinePaymentOptions,\n    AsyncPaymentOptions,\n    FlutterwaveCheckout,\n    PaymentSuccessResponse\n  };\n"],"names":[],"mappings":"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"}
